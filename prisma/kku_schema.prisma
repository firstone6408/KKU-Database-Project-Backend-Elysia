generator client {
    provider = "prisma-client-js"
    output   = "./generated/kku_client"
}

datasource db {
    provider = "mysql"
    url      = env("KKU_DATABASE_URL")
}

enum UserRole {
    ADMIN
    MANAGER
    STAFF
}

enum UserStatus {
    ACTIVE
    INACTIVE
    SUSPENDED
}

model Branch {
    id          Int    @id @default(autoincrement())
    branchCode  String @unique
    name        String @unique
    phoneNumber String
    address     String

    User     User[]
    Customer Customer[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id           Int        @id @default(autoincrement())
    username     String     @unique
    email        String     @unique
    password     String
    name         String
    profileImage String?
    phoneNumber  String?
    role         UserRole
    status       UserStatus @default(ACTIVE)
    lastLogin    DateTime?
    branchId     Int?
    branch       Branch?    @relation(fields: [branchId], references: [id])

    Customer Customer[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CustomerGroup {
    id   Int    @id @default(autoincrement())
    name String @unique

    Customer Customer[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Customer {
    id           Int     @id @default(autoincrement())
    customerCode String  @unique
    name         String
    phoneNumber  String
    address      String?

    customerGroupId Int
    customerGroup   CustomerGroup @relation(fields: [customerGroupId], references: [id])
    branchId        Int
    branch          Branch        @relation(fields: [branchId], references: [id])
    userId          Int
    user            User          @relation(fields: [userId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id           Int    @id @default(autoincrement())
    categoryCode String @unique
    name         String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
