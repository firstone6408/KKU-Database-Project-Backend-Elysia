generator client {
    provider = "prisma-client-js"
    output   = "./generated/kku_client"
}

datasource db {
    provider = "mysql"
    url      = env("KKU_DATABASE_URL")
}

enum UserRole {
    ADMIN
    MANAGER
    STAFF
}

enum UserStatus {
    ACTIVE
    INACTIVE
    SUSPENDED
}

model Branch {
    id          String   @id @default(uuid())
    branchCode  String   @unique
    name        String   @unique
    phoneNumber String
    address     String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    User     User[]
    Customer Customer[]
}

model User {
    id           String     @id @default(uuid())
    username     String     @unique
    email        String     @unique
    password     String
    name         String
    profileImage String?
    phoneNumber  String?
    role         UserRole
    status       UserStatus @default(ACTIVE)
    lastLogin    DateTime?
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt

    branchId String?
    branch   Branch? @relation(fields: [branchId], references: [id])

    Customer Customer[]
}

model CustomerGroup {
    id        String   @id @default(uuid())
    name      String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Customer Customer[]
}

model Customer {
    id           String   @id @default(uuid())
    customerCode String   @unique
    name         String
    phoneNumber  String
    address      String?
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    customerGroupId String
    customerGroup   CustomerGroup @relation(fields: [customerGroupId], references: [id])
    branchId        String
    branch          Branch        @relation(fields: [branchId], references: [id])
    userId          String
    user            User          @relation(fields: [userId], references: [id])
}

model Category {
    id           String   @id @default(uuid())
    categoryCode String   @unique
    name         String   @unique
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    Product Product[]
}

model Product {
    id          String    @id @default(uuid())
    productCode String    @unique
    name        String    @unique
    description String?
    image       String?
    isDeleted   Boolean   @default(false)
    deletedAt   DateTime?
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    categoryId String
    category   Category @relation(fields: [categoryId], references: [id])
}
